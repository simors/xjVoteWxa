<style lang="less">
  .zan-noticebar {
    color:#f60;
    padding:9px 10px;
    font-size:12px;
    line-height:1.5;
    background-color:#fff7cc
  }
</style>

<template>
  <view class="zan-noticebar">
    <view id="{{componentId}}__content-wrap" style="height: 18px; overflow: hidden; position: relative;">
      <view animation="{{animationData}}" id="{{componentId}}__content" style="position: absolute; white-space: nowrap;">
        {{text}}
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class zanNoticebar extends wepy.component {
    props = {
      text: {
        type: String,
        default: ''
      },
      componentId: String
    }

    data = {
      zanNoticeBarNode: null,
      animationData: null
    }

    watch = {
      text (newValue, oldValue) {
        this.$apply()
      }
    }

    initZanNoticeBarScroll(componentId) {
      this.zanNoticeBarNode = this.zanNoticeBarNode || {};
      this.zanNoticeBarNode[`${componentId}`] = {
        width: undefined,
        wrapWidth: undefined,
        animation: null,
        resetAnimation: null
      };
      var currentComponent = this.zanNoticeBarNode[`${componentId}`];
      var _this = this;
      wx.createSelectorQuery().select(`#${componentId}__content`).boundingClientRect(function (rect) {
        if (rect.width) {
          currentComponent.width = rect.width;
          wx.createSelectorQuery().select(`#${componentId}__content-wrap`).boundingClientRect(function (rect) {
            currentComponent.wrapWidth = rect.width;
            if (currentComponent.wrapWidth < currentComponent.width) {
              var mstime = currentComponent.width / 40 * 1000;
              currentComponent.animation = wepy.createAnimation({
                duration: mstime,
                timingFunction: 'linear'
              });
              currentComponent.resetAnimation = wepy.createAnimation({
                duration: 0,
                timingFunction: 'linear'
              });
              _this.scrollZanNoticeBar(componentId, mstime);
            }
          }).exec();
        } else {
          console.warn('页面缺少 noticebar 元素');
        }
      }).exec();
    }

    scrollZanNoticeBar(componentId, mstime) {
      var currentComponent = this.zanNoticeBarNode[`${componentId}`];
      var resetAnimationData = currentComponent.resetAnimation.translateX(currentComponent.wrapWidth).step();
//      this.setData({
//        [`${componentId}.animationData`]: resetAnimationData.export()
//      });
      this.animationData = resetAnimationData.export()
      var aninationData = currentComponent.animation.translateX(-mstime * 40 / 1000).step();
      var _this = this;
//      setTimeout(function () {
//        _this.setData({
//          [`${componentId}.animationData`]: aninationData.export()
//        });
//      }, 100);
      this.animationData = aninationData.export()

      setTimeout(function () {
        _this.scrollZanNoticeBar(componentId, mstime);
      }, mstime);
      this.$apply()
    }
  }
</script>
