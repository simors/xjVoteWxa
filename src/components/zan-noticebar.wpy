<style lang="less">
  .zan-noticebar {
    color:#fff;
    padding:9px 10px;
    font-size:12px;
    line-height:1.5;
    background-color: rgba(0, 0, 0, 0.2);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
  }
</style>

<template>
  <view class="zan-noticebar">
    <view id="barcontent-wrap" style="height: 18px; overflow: hidden; position: relative;">
      <view animation="{{animationData}}" id="barcontent" style="position: absolute; white-space: nowrap;">
        {{text}}
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class zanNoticebar extends wepy.component {
    props = {
      text: String
    }

    data = {
      zanNoticeBarNode: {},
      animationData: {},
      moveWidth: 0,
      timer: 0
    }

    methods = {

      initZanNoticeBarScroll() {
        this.zanNoticeBarNode = this.zanNoticeBarNode || {};
        this.zanNoticeBarNode = {
          width: undefined,
          wrapWidth: undefined,
          animation: null,
          resetAnimation: null
        };
        this.$apply()
        var currentComponent = this.zanNoticeBarNode;
        var _this = this;
        wx.createSelectorQuery().select('#barcontent').boundingClientRect(function (rect) {
          if (rect && rect.width) {
            currentComponent.width = rect.width;
            wx.createSelectorQuery().select('#barcontent-wrap').boundingClientRect(function (rect) {
              currentComponent.wrapWidth = rect.width;
              if (currentComponent.wrapWidth < currentComponent.width) {
                var mstime = currentComponent.width / 40 * 1000;
                currentComponent.animation = wx.createAnimation({
                  duration: mstime,
                  timingFunction: 'linear'
                });
                currentComponent.resetAnimation = wx.createAnimation({
                  duration: 0,
                  timingFunction: 'linear'
                });
                _this.scrollZanNoticeBar(mstime);
              }
            }).exec();
          } else {
            console.warn('页面缺少 noticebar 元素');
          }
        }).exec();
      }
    }

    scrollZanNoticeBar(mstime) {
      var currentComponent = this.zanNoticeBarNode;
      if (!currentComponent || ! currentComponent.resetAnimation || !currentComponent.animation) {
        return
      }
      var _this = this;
      if (this.moveWidth >= currentComponent.width) {
        var resetAnimationData = currentComponent.resetAnimation.translateX(currentComponent.wrapWidth).step();
        this.animationData = resetAnimationData.export()
        this.moveWidth = 0
        this.timer = 500
        this.$apply()
      } else {
        var aninationData = currentComponent.animation.translateX(-mstime * 40 / 1000).step();
        this.animationData = aninationData.export()
        this.moveWidth += mstime * 40 / 1000
        this.timer = mstime
        this.$apply()
      }

      setTimeout(function () {
        _this.scrollZanNoticeBar(mstime);
      }, this.timer);
    }
  }
</script>
