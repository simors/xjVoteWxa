<style type="less">
  .players-view {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    padding: 10px 0;
  }

  .player-item-view {
    padding-bottom: 10px;
    display: flex;
    flex-direction: column;
  }

  .player-img {
    width: 340rpx;
    height: 400rpx;
  }

  .player-text-view {
    height: 40px;
    padding: 0 10px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: #fafafa;
    border: 1px solid rgba(0, 0, 0, 0.05);
    border-top-width: 0;
  }

  .vote-num-view {
    position: relative;
    top: -490rpx;
    left: 200rpx;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 5px;
    width: 60px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

</style>

<template>
  <view class="players-view">
    <repeat for="{{players}}" key="index" index="index" item="item">
      <navigator class="player-item-view" url="/pages/vote/player?playerId={{item.id}}">
        <image src="{{item.album[0]}}" class="player-img" mode="aspectFill"/>
        <view style="width: 100%">
          <view class="player-text-view">
            <view style="display: flex; flex-direction: column;">
              <text class="zan-font-12" style="margin-bottom: 2px">{{item.number}}号</text>
              <text class="zan-font-12 zan-font-bold">{{item.name}}</text>
            </view>
            <view>
              <button class="zan-btn zan-btn--small zan-btn--primary">投票</button>
            </view>
          </view>
        </view>
        <view class="vote-num-view">
          <text class="zan-font-10" style="color: #fff">{{item.voteNum}}票</text>
        </view>
      </navigator>
    </repeat>

    <view wx:if="{{hasMore}}" class="zan-btns" style="width: 100%">
      <button class="zan-btn zan-btn--primary vote-btn" @tap.stop="loadMorePlayers">加载更多</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import vote from '../cloud/vote'

  export default class VotePlayers extends wepy.component {
    props = {
      voteId: String
    }

    data = {
      lastNumber: null,
      players: [],
      hasMore: true,
      limit: 10
    }

    methods = {
      async loadMorePlayers() {
        let morePlayers = await vote.fetchVotePlayers({
          voteId: this.voteId,
          lastNumber: this.lastNumber,
          limit: this.limit
        })
        let dataSize = morePlayers.length
        if (dataSize < this.limit) {
          this.hasMore = false
        }
        if (dataSize > 0) {
          this.lastNumber = morePlayers[dataSize-1].number
          this.players.push(...morePlayers)
          wepy.$instance.saveGlobalPlayers(this.players)
        }
        this.$apply()
      }
    }

    watch = {
      voteId(newValue, oldValue) {
        this.refreshPlayers()
      }
    }

    async refreshPlayers() {
      this.players = await vote.fetchVotePlayers({voteId: this.voteId, limit: this.limit})
      let dataSize = this.players.length
      if (dataSize < this.limit) {
        this.hasMore = false
      }
      if (dataSize > 0) {
        this.lastNumber = this.players[dataSize-1].number
        wepy.$instance.globalData.players = this.players
      }
      this.$apply()
    }

    async onLoad() {
      if (this.voteId) {
        await this.refreshPlayers()
      }
    }
  }
</script>
