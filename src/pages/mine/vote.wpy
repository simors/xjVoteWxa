<style lang="less">
  @import "../../styles/base.less";
  @import "../../minui/wxc-flex.wxss";

  .list--wrap {
    padding: 0;
  }

  .list__head {
    padding: 30rpx 30rpx 0;
    text-align: center;
    &--title {
      display: inline-block;
      padding: 0 40rpx 10rpx 40rpx;
      font-size: 32rpx;
      color: #9B9B9B;
    }
    &--line {
      margin: 0 auto;
      width: 150rpx;
      height: 2rpx;
      background-color: #D8D8D8;
    }
    &--desc {
      padding-top: 13rpx;
      color: #BEBEBE;
      font-size: 26rpx;
    }
  }

  .list__foot {
    margin: 100rpx 0 30rpx 0;
    text-align: center;
    color: #1aad19;
    font-size: 0;
    &--icon {
      width: 152rpx;
      height: 23rpx;
    }
  }

  .list-item--wrap {
    overflow: hidden;
    border-bottom: 1rpx solid rgba(0,0,0,0.08);
    background: #fff;
  }

  .list-item {
    max-height: 800rpx;
    overflow: hidden;
  }

  .list-item-meta {
    padding: 10rpx 24rpx 40rpx 24rpx;
  }

  .list-item-meta-title {
    padding: 12rpx 0;
    font-size: 40rpx;
    font-weight: 500;
    color: #555;
    border-radius: 8rpx;
    transition: background-color .4s ease;
  }

  .list-item-meta-desc {
    background: rgba(0,0,0,0.02);
    border: 1rpx solid rgba(0,0,0,0.08);
    border-radius: 10rpx;
    padding: 9rpx 0;

    image {
      height: 48rpx;
      width: 48rpx;
      margin-right: 24rpx;
    }
  }

  .loadmore {
    display: flex;
    width: 100%;
    height: 92rpx;
    justify-content: center;
    align-items: center;

    &__line {
      width: 100rpx;
      height: 1rpx;
      border-top: 1rpx solid #d2d2d2;
    }

    &__icon {
      width: 32rpx;
      height: 32rpx;
      margin-left: 16rpx;
    }

    &__text {
      margin: 0 16rpx 0 8rpx;
      color: #999;
      font-size: 28rpx;
    }

    &__wrap {
      color: #999;
      font-size: 28rpx;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    &__loading-icon {
      width:30px;
      height:30px;
      margin-right: 8px;
      display: inline-block;
      vertical-align: middle;
      animation: weuiLoading 1s steps(12, end) infinite;
      -webkit-background-size: 100%;
      background-size: 100%;
    }

    &__loading-text {
      display: inline-block;
      vertical-align: middle;
      margin-left: 8rpx;
    }
  }
</style>
<template>
  <view class="container has-toolbar">
    <view class="list--wrap">
      <view wx:key="id" wx:for="{{votes}}" wx:for-item="vote" class="list-item--wrap">
        <view class="flex main--center cross--center list-item">
          <image src="{{vote.cover}}" mode="widthFix" style="width: 100%;"
                 bindtap="showVoteDetail({{vote.id}})" />
        </view>
        <view class="list-item-meta">
          <view class="list-item-meta-title">{{vote.title}}</view>
          <view class="flex main--around cross--center list-item-meta-desc">
            <view class="flex main--center cross--center">
              <image src="/asset/svg/vote_count_48.svg" />
              <text style="color: #FF9D4E; font-size: 36rpx; padding-right: 8rpx">{{vote.voteNum}}</text>
              <text style="font-size: 32rpx">投票</text>
            </view>
            <view>
              <text style="line-height: 48rpx; color: rgba(0,0,0,0.05)">|</text>
            </view>
            <view class="flex main--center cross--center">
              <image src="/asset/svg/pv.svg" />
              <text style="color: #FF9D4E; font-size: 36rpx; padding-right: 8rpx">{{vote.pv}}</text>
              <text style="font-size: 32rpx">热度</text>
            </view>
          </view>
        </view>
      </view>
    </view>

    <view class="loadmore">
      <view wx:if="{{loading}}" class="loadmore__wrap">
        <image class="loadmore__loading-icon" src="../../asset/png/loading.png"></image>
        <text class="loadmore__loading-text">加载中...</text>
      </view>
      <block wx:elif="{{!moreVotes}}">
        <view class="loadmore__line"></view>
        <text class="loadmore__text">到底啦</text>
        <view class="loadmore__line"></view>
      </block>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import Tips from '@/utils/Tips';
  import cloud from '@/cloud/vote';

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '小吉互动'
    };
    components = {
    };
    data = {
      votes: [],
      loading: false,
      moreVotes: false
    };
    computed = {};
    methods = {
      showVoteDetail (id) {
        wx.navigateTo({
          url: '../vote/index?voteId=' + id
        })
      }
    };
    events = {};

    async onLoad() {
      this.loading = true;
      await this.$parent.getUserInfo();
      this.votes = await this.refreshVotes();
      this.loading = false;
      this.$apply();
    }

    onShareAppMessage() {
      const title = '小吉互动';
      const url = '/pages/index';
      return Tips.share(title, url, title);
    }

    async onPullDownRefresh() {
      this.votes = await this.refreshVotes();
      wx.stopPullDownRefresh();
      this.$apply();
    }

    async onReachBottom() {
      this.loading = true;
      const moreVotes = await this.fetchMoreVotes();
      this.loading = false;
      if (moreVotes.length === 0) {
        this.moreVotes = false;
        this.$apply();
        return;
      }

      this.moreVotes = true;
      this.votes.push(...moreVotes);
      this.$apply();
    }

    async refreshVotes() {
      const payload = {
        searchType: cloud.VOTE_SEARCH_TYPE.PERSONAL,
        status: [cloud.VOTE_STATUS.WAITING, cloud.VOTE_STATUS.STARTING, cloud.VOTE_STATUS.DONE],
        orderedBy: 'createdAt',
        limit: 10
      };
      return await cloud.fetchVotes(payload);
    }

    async fetchMoreVotes() {
      if (this.votes.length === 0) {
        return [];
      }

      const lastVote = this.votes[this.votes.length - 1];
      const lastCreatedAt = lastVote.createdAt;
      const payload = {
        searchType: cloud.VOTE_SEARCH_TYPE.PERSONAL,
        status: [cloud.VOTE_STATUS.WAITING, cloud.VOTE_STATUS.STARTING, cloud.VOTE_STATUS.DONE],
        orderedBy: 'createdAt',
        lastTime: lastCreatedAt,
        limit: 10
      };

      return await cloud.fetchVotes(payload);
    }
  }
</script>
